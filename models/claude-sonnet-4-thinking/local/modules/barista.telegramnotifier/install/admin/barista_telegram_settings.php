<?php

require_once $_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/prolog_admin_before.php';

use Bitrix\Main\Loader;
use Bitrix\Main\Localization\Loc;
use Barista\TelegramNotifier\Services\ConfigService;
use Barista\TelegramNotifier\Services\SecurityService;
use Barista\TelegramNotifier\Services\TelegramService;
use Barista\TelegramNotifier\Services\QueueService;
use Barista\TelegramNotifier\Services\AntiSpamService;

Loc::loadMessages(__FILE__);

$module_id = 'barista.telegramnotifier';

if (!$USER->IsAdmin()) {
    $APPLICATION->AuthForm(Loc::getMessage('ACCESS_DENIED'));
}

if (!Loader::includeModule($module_id)) {
    require $_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/prolog_admin_after.php';
    echo CAdminMessage::ShowMessage('–ú–æ–¥—É–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    require $_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/epilog_admin.php';
    die();
}

$APPLICATION->SetTitle('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');

$errors = [];
$message = '';

if ($_SERVER['REQUEST_METHOD'] === 'POST' && check_bitrix_sessid()) {
    
    if (isset($_POST['save'])) {
        $settings = [
            'enabled' => $_POST['enabled'] === 'Y',
            'bot_token' => trim($_POST['bot_token']),
            'chat_ids' => array_filter(array_map('trim', explode(',', $_POST['chat_ids']))),
            'critical_event_types' => array_filter(array_map('trim', explode(',', $_POST['critical_event_types']))),
            'critical_keywords' => array_filter(array_map('trim', explode(',', $_POST['critical_keywords']))),
            'antispam_interval' => (int)$_POST['antispam_interval'],
            'silence_mode' => $_POST['silence_mode'] === 'Y',
            'silence_duration' => (int)$_POST['silence_duration'],
            'max_retries' => (int)$_POST['max_retries'],
            'queue_limit' => (int)$_POST['queue_limit'],
            'logging_enabled' => $_POST['logging_enabled'] === 'Y',
            'log_level' => $_POST['log_level'],
        ];
        
        $errors = ConfigService::validateSettings($settings);
        
        if (empty($errors)) {
            if ($settings['enabled']) {
                ConfigService::enable();
            } else {
                ConfigService::disable();
            }
            
            ConfigService::setBotToken($settings['bot_token']);
            ConfigService::setChatIds($settings['chat_ids']);
            ConfigService::setCriticalEventTypes($settings['critical_event_types']);
            ConfigService::setCriticalKeywords($settings['critical_keywords']);
            ConfigService::setAntiSpamInterval($settings['antispam_interval']);
            ConfigService::setSilenceMode($settings['silence_mode']);
            ConfigService::setSilenceDuration($settings['silence_duration']);
            ConfigService::setMaxRetries($settings['max_retries']);
            ConfigService::setQueueProcessingLimit($settings['queue_limit']);
            ConfigService::setLoggingEnabled($settings['logging_enabled']);
            ConfigService::setLogLevel($settings['log_level']);
            
            $message = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã';
        }
    }
    
    if (isset($_POST['test_connection'])) {
        $botToken = trim($_POST['bot_token']);
        $chatIds = array_filter(array_map('trim', explode(',', $_POST['chat_ids'])));
        
        if (empty($botToken)) {
            $errors[] = '–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞';
        } elseif (empty($chatIds)) {
            $errors[] = '–í–≤–µ–¥–∏—Ç–µ Chat ID';
        } else {
            $telegram = new TelegramService($botToken);
            $testResult = $telegram->testConnection();
            
            if ($testResult) {
                $testMessage = "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–æ–¥—É–ª—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n–í—Ä–µ–º—è: " . date('d.m.Y H:i:s');
                $results = $telegram->sendToMultipleChats($chatIds, $testMessage);
                
                $successCount = 0;
                $errorMessages = [];
                
                foreach ($results as $chatId => $result) {
                    if ($result['success']) {
                        $successCount++;
                    } else {
                        $errorMessages[] = "Chat ID {$chatId}: " . $result['error'];
                    }
                }
                
                if ($successCount > 0) {
                    $message = "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {$successCount} —á–∞—Ç(–æ–≤)";
                    if (!empty($errorMessages)) {
                        $message .= "\n–û—à–∏–±–∫–∏: " . implode(', ', $errorMessages);
                    }
                } else {
                    $errors = array_merge($errors, $errorMessages);
                }
            } else {
                $errors[] = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram API';
            }
        }
    }
}

$currentSettings = ConfigService::getAllSettings();
$queueStats = QueueService::getQueueStats();
$spamStats = AntiSpamService::getSpamStats();

require $_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/prolog_admin_after.php';

if (!empty($errors)) {
    echo CAdminMessage::ShowMessage([
        'TYPE' => 'ERROR',
        'MESSAGE' => implode('<br>', $errors)
    ]);
}

if (!empty($message)) {
    echo CAdminMessage::ShowMessage([
        'TYPE' => 'OK',
        'MESSAGE' => $message
    ]);
}

$tabControl = new CAdminTabControl('telegram_settings', [
    ['DIV' => 'main', 'TAB' => '–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 'TITLE' => '–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'],
    ['DIV' => 'antispam', 'TAB' => '–ê–Ω—Ç–∏—Å–ø–∞–º', 'TITLE' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏—Å–ø–∞–º–∞'],
    ['DIV' => 'stats', 'TAB' => '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'TITLE' => '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥'],
]);

?>
<form method="post" action="<?= $APPLICATION->GetCurPage() ?>">
    <?= bitrix_sessid_post() ?>
    
    <?php $tabControl->Begin(); ?>
    
    <?php $tabControl->BeginNextTab(); ?>
    
    <tr>
        <td width="40%">–í–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª—å:</td>
        <td>
            <input type="checkbox" name="enabled" value="Y" <?= $currentSettings['enabled'] ? 'checked' : '' ?>>
        </td>
    </tr>
    
    <tr>
        <td>–¢–æ–∫–µ–Ω –±–æ—Ç–∞ <span class="required">*</span>:</td>
        <td>
            <input type="text" name="bot_token" value="<?= htmlspecialchars($currentSettings['bot_token']) ?>" size="50">
            <br><small>–ü–æ–ª—É—á–∏—Ç–µ —É @BotFather –≤ Telegram</small>
        </td>
    </tr>
    
    <tr>
        <td>Chat ID <span class="required">*</span>:</td>
        <td>
            <input type="text" name="chat_ids" value="<?= htmlspecialchars(implode(', ', $currentSettings['chat_ids'])) ?>" size="50">
            <br><small>–ù–µ—Å–∫–æ–ª—å–∫–æ ID —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –î–ª—è –≥—Ä—É–ø–ø –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ ID</small>
        </td>
    </tr>
    
    <tr>
        <td>–¢–∏–ø—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π:</td>
        <td>
            <input type="text" name="critical_event_types" value="<?= htmlspecialchars(implode(', ', $currentSettings['critical_event_types'])) ?>" size="50">
            <br><small>–ù–∞–ø—Ä–∏–º–µ—Ä: SECURITY, ERROR, EXCEPTION (–ø—É—Å—Ç–æ = –≤—Å–µ —Ç–∏–ø—ã)</small>
        </td>
    </tr>
    
    <tr>
        <td>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</td>
        <td>
            <input type="text" name="critical_keywords" value="<?= htmlspecialchars(implode(', ', $currentSettings['critical_keywords'])) ?>" size="50">
            <br><small>–°–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é</small>
        </td>
    </tr>
    
    <tr>
        <td>–ú–∞–∫—Å–∏–º—É–º –ø–æ–≤—Ç–æ—Ä–æ–≤:</td>
        <td>
            <input type="number" name="max_retries" value="<?= $currentSettings['max_retries'] ?>" min="1" max="10">
        </td>
    </tr>
    
    <tr>
        <td>–õ–∏–º–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏:</td>
        <td>
            <input type="number" name="queue_limit" value="<?= $currentSettings['queue_limit'] ?>" min="1" max="100">
        </td>
    </tr>
    
    <tr>
        <td>–í–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:</td>
        <td>
            <input type="checkbox" name="logging_enabled" value="Y" <?= $currentSettings['logging_enabled'] ? 'checked' : '' ?>>
        </td>
    </tr>
    
    <tr>
        <td>–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:</td>
        <td>
            <select name="log_level">
                <option value="ERROR" <?= $currentSettings['log_level'] === 'ERROR' ? 'selected' : '' ?>>ERROR</option>
                <option value="WARNING" <?= $currentSettings['log_level'] === 'WARNING' ? 'selected' : '' ?>>WARNING</option>
                <option value="INFO" <?= $currentSettings['log_level'] === 'INFO' ? 'selected' : '' ?>>INFO</option>
                <option value="DEBUG" <?= $currentSettings['log_level'] === 'DEBUG' ? 'selected' : '' ?>>DEBUG</option>
            </select>
        </td>
    </tr>
    
    <?php $tabControl->BeginNextTab(); ?>
    
    <tr>
        <td>–ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–Ω—Ç–∏—Å–ø–∞–º–∞ (—Å–µ–∫):</td>
        <td>
            <input type="number" name="antispam_interval" value="<?= $currentSettings['antispam_interval'] ?>" min="60" max="3600">
            <br><small>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏</small>
        </td>
    </tr>
    
    <tr>
        <td>–†–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã:</td>
        <td>
            <input type="checkbox" name="silence_mode" value="Y" <?= $currentSettings['silence_mode'] ? 'checked' : '' ?>>
            <br><small>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞—Ç—å —Ä–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–æ–±—ã—Ç–∏–π</small>
        </td>
    </tr>
    
    <tr>
        <td>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∏—à–∏–Ω—ã (—Å–µ–∫):</td>
        <td>
            <input type="number" name="silence_duration" value="<?= $currentSettings['silence_duration'] ?>" min="300" max="86400">
            <br><small>–ù–∞ —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª—é—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è</small>
        </td>
    </tr>
    
    <?php $tabControl->BeginNextTab(); ?>
    
    <tr>
        <td colspan="2">
            <h3>–û—á–µ—Ä–µ–¥—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
            <table class="internal">
                <tr>
                    <th>–°—Ç–∞—Ç—É—Å</th>
                    <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                </tr>
                <tr>
                    <td>–û–∂–∏–¥–∞—é—Ç</td>
                    <td><?= $queueStats['pending'] ?></td>
                </tr>
                <tr>
                    <td>–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è</td>
                    <td><?= $queueStats['processing'] ?></td>
                </tr>
                <tr>
                    <td>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã</td>
                    <td><?= $queueStats['sent'] ?></td>
                </tr>
                <tr>
                    <td>–û—à–∏–±–∫–∏</td>
                    <td><?= $queueStats['failed'] ?></td>
                </tr>
                <tr>
                    <td><strong>–í—Å–µ–≥–æ</strong></td>
                    <td><strong><?= $queueStats['total'] ?></strong></td>
                </tr>
            </table>
            
            <h3>–ê–Ω—Ç–∏—Å–ø–∞–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
            <table class="internal">
                <tr>
                    <th>–ü–∞—Ä–∞–º–µ—Ç—Ä</th>
                    <th>–ó–Ω–∞—á–µ–Ω–∏–µ</th>
                </tr>
                <tr>
                    <td>–í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π</td>
                    <td><?= $spamStats['total_events'] ?></td>
                </tr>
                <tr>
                    <td>–ê–∫—Ç–∏–≤–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫</td>
                    <td><?= $spamStats['active_silences'] ?></td>
                </tr>
            </table>
            
            <?php if (!empty($spamStats['most_frequent_events'])): ?>
            <h3>–ù–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç—ã–µ —Å–æ–±—ã—Ç–∏—è</h3>
            <table class="internal">
                <tr>
                    <th>–¢–∏–ø —Å–æ–±—ã—Ç–∏—è</th>
                    <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                </tr>
                <?php foreach ($spamStats['most_frequent_events'] as $event): ?>
                <tr>
                    <td><?= htmlspecialchars($event['event_type']) ?></td>
                    <td><?= $event['count'] ?></td>
                </tr>
                <?php endforeach; ?>
            </table>
            <?php endif; ?>
        </td>
    </tr>
    
    <?php $tabControl->Buttons(); ?>
    
    <input type="submit" name="save" value="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" class="adm-btn-save">
    <input type="submit" name="test_connection" value="–¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è" class="adm-btn">
    
    <?php $tabControl->End(); ?>
</form>

<?php
require $_SERVER['DOCUMENT_ROOT'] . '/bitrix/modules/main/include/epilog_admin.php';
?> 